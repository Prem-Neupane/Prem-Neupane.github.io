{"ast":null,"code":"/*!\r\n * \r\n *   typed.js - A JavaScript Typing Animation Library\r\n *   Author: Matt Boldt <me@mattboldt.com>\r\n *   Version: v2.0.12\r\n *   Url: https://github.com/mattboldt/typed.js\r\n *   License(s): MIT\r\n * \r\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define([], factory);else if (typeof exports === 'object') exports[\"Typed\"] = factory();else root[\"Typed\"] = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId])\n          /******/\n          return installedModules[moduleId].exports;\n        /******/\n\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n        var module = installedModules[moduleId] = {\n          /******/\n          exports: {},\n\n          /******/\n          id: moduleId,\n\n          /******/\n          loaded: false\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.loaded = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n      __webpack_require__.p = \"\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var _initializerJs = __webpack_require__(1);\n\n      var _htmlParserJs = __webpack_require__(3);\n      /**\r\n       * Welcome to Typed.js!\r\n       * @param {string} elementId HTML element ID _OR_ HTML element\r\n       * @param {object} options options object\r\n       * @returns {object} a new Typed object\r\n       */\n\n\n      var Typed = function () {\n        function Typed(elementId, options) {\n          _classCallCheck(this, Typed); // Initialize it up\n\n\n          _initializerJs.initializer.load(this, options, elementId); // All systems go!\n\n\n          this.begin();\n        }\n        /**\r\n         * Toggle start() and stop() of the Typed instance\r\n         * @public\r\n         */\n\n\n        _createClass(Typed, [{\n          key: 'toggle',\n          value: function toggle() {\n            this.pause.status ? this.start() : this.stop();\n          }\n          /**\r\n           * Stop typing / backspacing and enable cursor blinking\r\n           * @public\r\n           */\n\n        }, {\n          key: 'stop',\n          value: function stop() {\n            if (this.typingComplete) return;\n            if (this.pause.status) return;\n            this.toggleBlinking(true);\n            this.pause.status = true;\n            this.options.onStop(this.arrayPos, this);\n          }\n          /**\r\n           * Start typing / backspacing after being stopped\r\n           * @public\r\n           */\n\n        }, {\n          key: 'start',\n          value: function start() {\n            if (this.typingComplete) return;\n            if (!this.pause.status) return;\n            this.pause.status = false;\n\n            if (this.pause.typewrite) {\n              this.typewrite(this.pause.curString, this.pause.curStrPos);\n            } else {\n              this.backspace(this.pause.curString, this.pause.curStrPos);\n            }\n\n            this.options.onStart(this.arrayPos, this);\n          }\n          /**\r\n           * Destroy this instance of Typed\r\n           * @public\r\n           */\n\n        }, {\n          key: 'destroy',\n          value: function destroy() {\n            this.reset(false);\n            this.options.onDestroy(this);\n          }\n          /**\r\n           * Reset Typed and optionally restarts\r\n           * @param {boolean} restart\r\n           * @public\r\n           */\n\n        }, {\n          key: 'reset',\n          value: function reset() {\n            var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n            clearInterval(this.timeout);\n            this.replaceText('');\n\n            if (this.cursor && this.cursor.parentNode) {\n              this.cursor.parentNode.removeChild(this.cursor);\n              this.cursor = null;\n            }\n\n            this.strPos = 0;\n            this.arrayPos = 0;\n            this.curLoop = 0;\n\n            if (restart) {\n              this.insertCursor();\n              this.options.onReset(this);\n              this.begin();\n            }\n          }\n          /**\r\n           * Begins the typing animation\r\n           * @private\r\n           */\n\n        }, {\n          key: 'begin',\n          value: function begin() {\n            var _this = this;\n\n            this.options.onBegin(this);\n            this.typingComplete = false;\n            this.shuffleStringsIfNeeded(this);\n            this.insertCursor();\n            if (this.bindInputFocusEvents) this.bindFocusEvents();\n            this.timeout = setTimeout(function () {\n              // Check if there is some text in the element, if yes start by backspacing the default message\n              if (!_this.currentElContent || _this.currentElContent.length === 0) {\n                _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n              } else {\n                // Start typing\n                _this.backspace(_this.currentElContent, _this.currentElContent.length);\n              }\n            }, this.startDelay);\n          }\n          /**\r\n           * Called for each character typed\r\n           * @param {string} curString the current string in the strings array\r\n           * @param {number} curStrPos the current position in the curString\r\n           * @private\r\n           */\n\n        }, {\n          key: 'typewrite',\n          value: function typewrite(curString, curStrPos) {\n            var _this2 = this;\n\n            if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n              this.el.classList.remove(this.fadeOutClass);\n              if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n            }\n\n            var humanize = this.humanizer(this.typeSpeed);\n            var numChars = 1;\n\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, true);\n              return;\n            } // contain typing function in a timeout humanize'd delay\n\n\n            this.timeout = setTimeout(function () {\n              // skip over any HTML chars\n              curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n              var pauseTime = 0;\n              var substr = curString.substr(curStrPos); // check for an escape character before a pause value\n              // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n              // single ^ are removed from string\n\n              if (substr.charAt(0) === '^') {\n                if (/^\\^\\d+/.test(substr)) {\n                  var skip = 1; // skip at least 1\n\n                  substr = /\\d+/.exec(substr)[0];\n                  skip += substr.length;\n                  pauseTime = parseInt(substr);\n                  _this2.temporaryPause = true;\n\n                  _this2.options.onTypingPaused(_this2.arrayPos, _this2); // strip out the escape character and pause value so they're not printed\n\n\n                  curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\n                  _this2.toggleBlinking(true);\n                }\n              } // check for skip characters formatted as\n              // \"this is a `string to print NOW` ...\"\n\n\n              if (substr.charAt(0) === '`') {\n                while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n                  numChars++;\n                  if (curStrPos + numChars > curString.length) break;\n                } // strip out the escape characters and append all the string in between\n\n\n                var stringBeforeSkip = curString.substring(0, curStrPos);\n                var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n                var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n                curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n                numChars--;\n              } // timeout for any pause after a character\n\n\n              _this2.timeout = setTimeout(function () {\n                // Accounts for blinking while paused\n                _this2.toggleBlinking(false); // We're done with this sentence!\n\n\n                if (curStrPos >= curString.length) {\n                  _this2.doneTyping(curString, curStrPos);\n                } else {\n                  _this2.keepTyping(curString, curStrPos, numChars);\n                } // end of character pause\n\n\n                if (_this2.temporaryPause) {\n                  _this2.temporaryPause = false;\n\n                  _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n                }\n              }, pauseTime); // humanized value for typing\n            }, humanize);\n          }\n          /**\r\n           * Continue to the next string & begin typing\r\n           * @param {string} curString the current string in the strings array\r\n           * @param {number} curStrPos the current position in the curString\r\n           * @private\r\n           */\n\n        }, {\n          key: 'keepTyping',\n          value: function keepTyping(curString, curStrPos, numChars) {\n            // call before functions if applicable\n            if (curStrPos === 0) {\n              this.toggleBlinking(false);\n              this.options.preStringTyped(this.arrayPos, this);\n            } // start typing each new char into existing string\n            // curString: arg, this.el.html: original text inside element\n\n\n            curStrPos += numChars;\n            var nextString = curString.substr(0, curStrPos);\n            this.replaceText(nextString); // loop the function\n\n            this.typewrite(curString, curStrPos);\n          }\n          /**\r\n           * We're done typing the current string\r\n           * @param {string} curString the current string in the strings array\r\n           * @param {number} curStrPos the current position in the curString\r\n           * @private\r\n           */\n\n        }, {\n          key: 'doneTyping',\n          value: function doneTyping(curString, curStrPos) {\n            var _this3 = this; // fires callback function\n\n\n            this.options.onStringTyped(this.arrayPos, this);\n            this.toggleBlinking(true); // is this the final string\n\n            if (this.arrayPos === this.strings.length - 1) {\n              // callback that occurs on the last typed string\n              this.complete(); // quit if we wont loop back\n\n              if (this.loop === false || this.curLoop === this.loopCount) {\n                return;\n              }\n            }\n\n            this.timeout = setTimeout(function () {\n              _this3.backspace(curString, curStrPos);\n            }, this.backDelay);\n          }\n          /**\r\n           * Backspaces 1 character at a time\r\n           * @param {string} curString the current string in the strings array\r\n           * @param {number} curStrPos the current position in the curString\r\n           * @private\r\n           */\n\n        }, {\n          key: 'backspace',\n          value: function backspace(curString, curStrPos) {\n            var _this4 = this;\n\n            if (this.pause.status === true) {\n              this.setPauseStatus(curString, curStrPos, false);\n              return;\n            }\n\n            if (this.fadeOut) return this.initFadeOut();\n            this.toggleBlinking(false);\n            var humanize = this.humanizer(this.backSpeed);\n            this.timeout = setTimeout(function () {\n              curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4); // replace text with base text + typed characters\n\n              var curStringAtPosition = curString.substr(0, curStrPos);\n\n              _this4.replaceText(curStringAtPosition); // if smartBack is enabled\n\n\n              if (_this4.smartBackspace) {\n                // the remaining part of the current string is equal of the same part of the new string\n                var nextString = _this4.strings[_this4.arrayPos + 1];\n\n                if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n                  _this4.stopNum = curStrPos;\n                } else {\n                  _this4.stopNum = 0;\n                }\n              } // if the number (id of character in current string) is\n              // less than the stop number, keep going\n\n\n              if (curStrPos > _this4.stopNum) {\n                // subtract characters one by one\n                curStrPos--; // loop the function\n\n                _this4.backspace(curString, curStrPos);\n              } else if (curStrPos <= _this4.stopNum) {\n                // if the stop number has been reached, increase\n                // array position to next string\n                _this4.arrayPos++; // When looping, begin at the beginning after backspace complete\n\n                if (_this4.arrayPos === _this4.strings.length) {\n                  _this4.arrayPos = 0;\n\n                  _this4.options.onLastStringBackspaced();\n\n                  _this4.shuffleStringsIfNeeded();\n\n                  _this4.begin();\n                } else {\n                  _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n                }\n              } // humanized value for typing\n\n            }, humanize);\n          }\n          /**\r\n           * Full animation is complete\r\n           * @private\r\n           */\n\n        }, {\n          key: 'complete',\n          value: function complete() {\n            this.options.onComplete(this);\n\n            if (this.loop) {\n              this.curLoop++;\n            } else {\n              this.typingComplete = true;\n            }\n          }\n          /**\r\n           * Has the typing been stopped\r\n           * @param {string} curString the current string in the strings array\r\n           * @param {number} curStrPos the current position in the curString\r\n           * @param {boolean} isTyping\r\n           * @private\r\n           */\n\n        }, {\n          key: 'setPauseStatus',\n          value: function setPauseStatus(curString, curStrPos, isTyping) {\n            this.pause.typewrite = isTyping;\n            this.pause.curString = curString;\n            this.pause.curStrPos = curStrPos;\n          }\n          /**\r\n           * Toggle the blinking cursor\r\n           * @param {boolean} isBlinking\r\n           * @private\r\n           */\n\n        }, {\n          key: 'toggleBlinking',\n          value: function toggleBlinking(isBlinking) {\n            if (!this.cursor) return; // if in paused state, don't toggle blinking a 2nd time\n\n            if (this.pause.status) return;\n            if (this.cursorBlinking === isBlinking) return;\n            this.cursorBlinking = isBlinking;\n\n            if (isBlinking) {\n              this.cursor.classList.add('typed-cursor--blink');\n            } else {\n              this.cursor.classList.remove('typed-cursor--blink');\n            }\n          }\n          /**\r\n           * Speed in MS to type\r\n           * @param {number} speed\r\n           * @private\r\n           */\n\n        }, {\n          key: 'humanizer',\n          value: function humanizer(speed) {\n            return Math.round(Math.random() * speed / 2) + speed;\n          }\n          /**\r\n           * Shuffle the sequence of the strings array\r\n           * @private\r\n           */\n\n        }, {\n          key: 'shuffleStringsIfNeeded',\n          value: function shuffleStringsIfNeeded() {\n            if (!this.shuffle) return;\n            this.sequence = this.sequence.sort(function () {\n              return Math.random() - 0.5;\n            });\n          }\n          /**\r\n           * Adds a CSS class to fade out current string\r\n           * @private\r\n           */\n\n        }, {\n          key: 'initFadeOut',\n          value: function initFadeOut() {\n            var _this5 = this;\n\n            this.el.className += ' ' + this.fadeOutClass;\n            if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n            return setTimeout(function () {\n              _this5.arrayPos++;\n\n              _this5.replaceText(''); // Resets current string if end of loop reached\n\n\n              if (_this5.strings.length > _this5.arrayPos) {\n                _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n              } else {\n                _this5.typewrite(_this5.strings[0], 0);\n\n                _this5.arrayPos = 0;\n              }\n            }, this.fadeOutDelay);\n          }\n          /**\r\n           * Replaces current text in the HTML element\r\n           * depending on element type\r\n           * @param {string} str\r\n           * @private\r\n           */\n\n        }, {\n          key: 'replaceText',\n          value: function replaceText(str) {\n            if (this.attr) {\n              this.el.setAttribute(this.attr, str);\n            } else {\n              if (this.isInput) {\n                this.el.value = str;\n              } else if (this.contentType === 'html') {\n                this.el.innerHTML = str;\n              } else {\n                this.el.textContent = str;\n              }\n            }\n          }\n          /**\r\n           * If using input elements, bind focus in order to\r\n           * start and stop the animation\r\n           * @private\r\n           */\n\n        }, {\n          key: 'bindFocusEvents',\n          value: function bindFocusEvents() {\n            var _this6 = this;\n\n            if (!this.isInput) return;\n            this.el.addEventListener('focus', function (e) {\n              _this6.stop();\n            });\n            this.el.addEventListener('blur', function (e) {\n              if (_this6.el.value && _this6.el.value.length !== 0) {\n                return;\n              }\n\n              _this6.start();\n            });\n          }\n          /**\r\n           * On init, insert the cursor element\r\n           * @private\r\n           */\n\n        }, {\n          key: 'insertCursor',\n          value: function insertCursor() {\n            if (!this.showCursor) return;\n            if (this.cursor) return;\n            this.cursor = document.createElement('span');\n            this.cursor.className = 'typed-cursor';\n            this.cursor.setAttribute('aria-hidden', true);\n            this.cursor.innerHTML = this.cursorChar;\n            this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n          }\n        }]);\n\n        return Typed;\n      }();\n\n      exports['default'] = Typed;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _extends = Object.assign || function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n\n        return target;\n      };\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n          'default': obj\n        };\n      }\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var _defaultsJs = __webpack_require__(2);\n\n      var _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n      /**\r\n       * Initialize the Typed object\r\n       */\n\n\n      var Initializer = function () {\n        function Initializer() {\n          _classCallCheck(this, Initializer);\n        }\n\n        _createClass(Initializer, [{\n          key: 'load',\n\n          /**\r\n           * Load up defaults & options on the Typed instance\r\n           * @param {Typed} self instance of Typed\r\n           * @param {object} options options object\r\n           * @param {string} elementId HTML element ID _OR_ instance of HTML element\r\n           * @private\r\n           */\n          value: function load(self, options, elementId) {\n            // chosen element to manipulate text\n            if (typeof elementId === 'string') {\n              self.el = document.querySelector(elementId);\n            } else {\n              self.el = elementId;\n            }\n\n            self.options = _extends({}, _defaultsJs2['default'], options); // attribute to type into\n\n            self.isInput = self.el.tagName.toLowerCase() === 'input';\n            self.attr = self.options.attr;\n            self.bindInputFocusEvents = self.options.bindInputFocusEvents; // show cursor\n\n            self.showCursor = self.isInput ? false : self.options.showCursor; // custom cursor\n\n            self.cursorChar = self.options.cursorChar; // Is the cursor blinking\n\n            self.cursorBlinking = true; // text content of element\n\n            self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent; // html or plain text\n\n            self.contentType = self.options.contentType; // typing speed\n\n            self.typeSpeed = self.options.typeSpeed; // add a delay before typing starts\n\n            self.startDelay = self.options.startDelay; // backspacing speed\n\n            self.backSpeed = self.options.backSpeed; // only backspace what doesn't match the previous string\n\n            self.smartBackspace = self.options.smartBackspace; // amount of time to wait before backspacing\n\n            self.backDelay = self.options.backDelay; // Fade out instead of backspace\n\n            self.fadeOut = self.options.fadeOut;\n            self.fadeOutClass = self.options.fadeOutClass;\n            self.fadeOutDelay = self.options.fadeOutDelay; // variable to check whether typing is currently paused\n\n            self.isPaused = false; // input strings of text\n\n            self.strings = self.options.strings.map(function (s) {\n              return s.trim();\n            }); // div containing strings\n\n            if (typeof self.options.stringsElement === 'string') {\n              self.stringsElement = document.querySelector(self.options.stringsElement);\n            } else {\n              self.stringsElement = self.options.stringsElement;\n            }\n\n            if (self.stringsElement) {\n              self.strings = [];\n              self.stringsElement.style.display = 'none';\n              var strings = Array.prototype.slice.apply(self.stringsElement.children);\n              var stringsLength = strings.length;\n\n              if (stringsLength) {\n                for (var i = 0; i < stringsLength; i += 1) {\n                  var stringEl = strings[i];\n                  self.strings.push(stringEl.innerHTML.trim());\n                }\n              }\n            } // character number position of current string\n\n\n            self.strPos = 0; // current array position\n\n            self.arrayPos = 0; // index of string to stop backspacing on\n\n            self.stopNum = 0; // Looping logic\n\n            self.loop = self.options.loop;\n            self.loopCount = self.options.loopCount;\n            self.curLoop = 0; // shuffle the strings\n\n            self.shuffle = self.options.shuffle; // the order of strings\n\n            self.sequence = [];\n            self.pause = {\n              status: false,\n              typewrite: true,\n              curString: '',\n              curStrPos: 0\n            }; // When the typing is complete (when not looped)\n\n            self.typingComplete = false; // Set the order in which the strings are typed\n\n            for (var i in self.strings) {\n              self.sequence[i] = i;\n            } // If there is some text in the element\n\n\n            self.currentElContent = this.getCurrentElContent(self);\n            self.autoInsertCss = self.options.autoInsertCss;\n            this.appendAnimationCss(self);\n          }\n        }, {\n          key: 'getCurrentElContent',\n          value: function getCurrentElContent(self) {\n            var elContent = '';\n\n            if (self.attr) {\n              elContent = self.el.getAttribute(self.attr);\n            } else if (self.isInput) {\n              elContent = self.el.value;\n            } else if (self.contentType === 'html') {\n              elContent = self.el.innerHTML;\n            } else {\n              elContent = self.el.textContent;\n            }\n\n            return elContent;\n          }\n        }, {\n          key: 'appendAnimationCss',\n          value: function appendAnimationCss(self) {\n            var cssDataName = 'data-typed-js-css';\n\n            if (!self.autoInsertCss) {\n              return;\n            }\n\n            if (!self.showCursor && !self.fadeOut) {\n              return;\n            }\n\n            if (document.querySelector('[' + cssDataName + ']')) {\n              return;\n            }\n\n            var css = document.createElement('style');\n            css.type = 'text/css';\n            css.setAttribute(cssDataName, true);\n            var innerCss = '';\n\n            if (self.showCursor) {\n              innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n            }\n\n            if (self.fadeOut) {\n              innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n            }\n\n            if (css.length === 0) {\n              return;\n            }\n\n            css.innerHTML = innerCss;\n            document.body.appendChild(css);\n          }\n        }]);\n\n        return Initializer;\n      }();\n\n      exports['default'] = Initializer;\n      var initializer = new Initializer();\n      exports.initializer = initializer;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports) {\n      /**\r\n       * Defaults & options\r\n       * @returns {object} Typed defaults & options\r\n       * @public\r\n       */\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n      var defaults = {\n        /**\r\n         * @property {array} strings strings to be typed\r\n         * @property {string} stringsElement ID of element containing string children\r\n         */\n        strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n        stringsElement: null,\n\n        /**\r\n         * @property {number} typeSpeed type speed in milliseconds\r\n         */\n        typeSpeed: 0,\n\n        /**\r\n         * @property {number} startDelay time before typing starts in milliseconds\r\n         */\n        startDelay: 0,\n\n        /**\r\n         * @property {number} backSpeed backspacing speed in milliseconds\r\n         */\n        backSpeed: 0,\n\n        /**\r\n         * @property {boolean} smartBackspace only backspace what doesn't match the previous string\r\n         */\n        smartBackspace: true,\n\n        /**\r\n         * @property {boolean} shuffle shuffle the strings\r\n         */\n        shuffle: false,\n\n        /**\r\n         * @property {number} backDelay time before backspacing in milliseconds\r\n         */\n        backDelay: 700,\n\n        /**\r\n         * @property {boolean} fadeOut Fade out instead of backspace\r\n         * @property {string} fadeOutClass css class for fade animation\r\n         * @property {boolean} fadeOutDelay Fade out delay in milliseconds\r\n         */\n        fadeOut: false,\n        fadeOutClass: 'typed-fade-out',\n        fadeOutDelay: 500,\n\n        /**\r\n         * @property {boolean} loop loop strings\r\n         * @property {number} loopCount amount of loops\r\n         */\n        loop: false,\n        loopCount: Infinity,\n\n        /**\r\n         * @property {boolean} showCursor show cursor\r\n         * @property {string} cursorChar character for cursor\r\n         * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\r\n         */\n        showCursor: true,\n        cursorChar: '|',\n        autoInsertCss: true,\n\n        /**\r\n         * @property {string} attr attribute for typing\r\n         * Ex: input placeholder, value, or just HTML text\r\n         */\n        attr: null,\n\n        /**\r\n         * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\r\n         */\n        bindInputFocusEvents: false,\n\n        /**\r\n         * @property {string} contentType 'html' or 'null' for plaintext\r\n         */\n        contentType: 'html',\n\n        /**\r\n         * Before it begins typing\r\n         * @param {Typed} self\r\n         */\n        onBegin: function onBegin(self) {},\n\n        /**\r\n         * All typing is complete\r\n         * @param {Typed} self\r\n         */\n        onComplete: function onComplete(self) {},\n\n        /**\r\n         * Before each string is typed\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        preStringTyped: function preStringTyped(arrayPos, self) {},\n\n        /**\r\n         * After each string is typed\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        onStringTyped: function onStringTyped(arrayPos, self) {},\n\n        /**\r\n         * During looping, after last string is typed\r\n         * @param {Typed} self\r\n         */\n        onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\n        /**\r\n         * Typing has been stopped\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\n        /**\r\n         * Typing has been started after being stopped\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\n        /**\r\n         * After reset\r\n         * @param {Typed} self\r\n         */\n        onReset: function onReset(self) {},\n\n        /**\r\n         * After stop\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        onStop: function onStop(arrayPos, self) {},\n\n        /**\r\n         * After start\r\n         * @param {number} arrayPos\r\n         * @param {Typed} self\r\n         */\n        onStart: function onStart(arrayPos, self) {},\n\n        /**\r\n         * After destroy\r\n         * @param {Typed} self\r\n         */\n        onDestroy: function onDestroy(self) {}\n      };\n      exports['default'] = defaults;\n      module.exports = exports['default'];\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports) {\n      /**\r\n       * TODO: These methods can probably be combined somehow\r\n       * Parse HTML tags & HTML Characters\r\n       */\n      'use strict';\n\n      Object.defineProperty(exports, '__esModule', {\n        value: true\n      });\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if ('value' in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError('Cannot call a class as a function');\n        }\n      }\n\n      var HTMLParser = function () {\n        function HTMLParser() {\n          _classCallCheck(this, HTMLParser);\n        }\n\n        _createClass(HTMLParser, [{\n          key: 'typeHtmlChars',\n\n          /**\r\n           * Type HTML tags & HTML Characters\r\n           * @param {string} curString Current string\r\n           * @param {number} curStrPos Position in current string\r\n           * @param {Typed} self instance of Typed\r\n           * @returns {number} a new string position\r\n           * @private\r\n           */\n          value: function typeHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n\n            if (curChar === '<' || curChar === '&') {\n              var endTag = '';\n\n              if (curChar === '<') {\n                endTag = '>';\n              } else {\n                endTag = ';';\n              }\n\n              while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n                curStrPos++;\n\n                if (curStrPos + 1 > curString.length) {\n                  break;\n                }\n              }\n\n              curStrPos++;\n            }\n\n            return curStrPos;\n          }\n          /**\r\n           * Backspace HTML tags and HTML Characters\r\n           * @param {string} curString Current string\r\n           * @param {number} curStrPos Position in current string\r\n           * @param {Typed} self instance of Typed\r\n           * @returns {number} a new string position\r\n           * @private\r\n           */\n\n        }, {\n          key: 'backSpaceHtmlChars',\n          value: function backSpaceHtmlChars(curString, curStrPos, self) {\n            if (self.contentType !== 'html') return curStrPos;\n            var curChar = curString.substr(curStrPos).charAt(0);\n\n            if (curChar === '>' || curChar === ';') {\n              var endTag = '';\n\n              if (curChar === '>') {\n                endTag = '<';\n              } else {\n                endTag = '&';\n              }\n\n              while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n                curStrPos--;\n\n                if (curStrPos < 0) {\n                  break;\n                }\n              }\n\n              curStrPos--;\n            }\n\n            return curStrPos;\n          }\n        }]);\n\n        return HTMLParser;\n      }();\n\n      exports['default'] = HTMLParser;\n      var htmlParser = new HTMLParser();\n      exports.htmlParser = htmlParser;\n      /***/\n    }\n    /******/\n    ])\n  );\n});\n\n;","map":{"version":3,"sources":["D:/Web Dev/Node JS/Prem-Neupane.github.io _latest_updated/node_modules/typed.js/lib/typed.js"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_initializerJs","_htmlParserJs","Typed","elementId","options","initializer","load","begin","toggle","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","destroy","reset","onDestroy","restart","arguments","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","_this","onBegin","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","_this2","fadeOut","el","classList","contains","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","setPauseStatus","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","preStringTyped","nextString","_this3","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","add","speed","Math","round","random","shuffle","sort","_this5","className","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","e","showCursor","document","createElement","cursorChar","insertBefore","nextSibling","_extends","assign","source","hasOwnProperty","_interopRequireDefault","obj","__esModule","_defaultsJs","_defaultsJs2","Initializer","self","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","map","s","trim","stringsElement","style","display","Array","slice","apply","children","stringsLength","stringEl","push","getCurrentElContent","autoInsertCss","appendAnimationCss","cssDataName","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag"],"mappings":"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","sourcesContent":["/*!\r\n * \r\n *   typed.js - A JavaScript Typing Animation Library\r\n *   Author: Matt Boldt <me@mattboldt.com>\r\n *   Version: v2.0.12\r\n *   Url: https://github.com/mattboldt/typed.js\r\n *   License(s): MIT\r\n * \r\n */\r\n(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"Typed\"] = factory();\r\n\telse\r\n\t\troot[\"Typed\"] = factory();\r\n})(this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, '__esModule', {\r\n\t  value: true\r\n\t});\r\n\t\r\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\t\r\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\t\r\n\tvar _initializerJs = __webpack_require__(1);\r\n\t\r\n\tvar _htmlParserJs = __webpack_require__(3);\r\n\t\r\n\t/**\r\n\t * Welcome to Typed.js!\r\n\t * @param {string} elementId HTML element ID _OR_ HTML element\r\n\t * @param {object} options options object\r\n\t * @returns {object} a new Typed object\r\n\t */\r\n\t\r\n\tvar Typed = (function () {\r\n\t  function Typed(elementId, options) {\r\n\t    _classCallCheck(this, Typed);\r\n\t\r\n\t    // Initialize it up\r\n\t    _initializerJs.initializer.load(this, options, elementId);\r\n\t    // All systems go!\r\n\t    this.begin();\r\n\t  }\r\n\t\r\n\t  /**\r\n\t   * Toggle start() and stop() of the Typed instance\r\n\t   * @public\r\n\t   */\r\n\t\r\n\t  _createClass(Typed, [{\r\n\t    key: 'toggle',\r\n\t    value: function toggle() {\r\n\t      this.pause.status ? this.start() : this.stop();\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Stop typing / backspacing and enable cursor blinking\r\n\t     * @public\r\n\t     */\r\n\t  }, {\r\n\t    key: 'stop',\r\n\t    value: function stop() {\r\n\t      if (this.typingComplete) return;\r\n\t      if (this.pause.status) return;\r\n\t      this.toggleBlinking(true);\r\n\t      this.pause.status = true;\r\n\t      this.options.onStop(this.arrayPos, this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Start typing / backspacing after being stopped\r\n\t     * @public\r\n\t     */\r\n\t  }, {\r\n\t    key: 'start',\r\n\t    value: function start() {\r\n\t      if (this.typingComplete) return;\r\n\t      if (!this.pause.status) return;\r\n\t      this.pause.status = false;\r\n\t      if (this.pause.typewrite) {\r\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\r\n\t      } else {\r\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\r\n\t      }\r\n\t      this.options.onStart(this.arrayPos, this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Destroy this instance of Typed\r\n\t     * @public\r\n\t     */\r\n\t  }, {\r\n\t    key: 'destroy',\r\n\t    value: function destroy() {\r\n\t      this.reset(false);\r\n\t      this.options.onDestroy(this);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Reset Typed and optionally restarts\r\n\t     * @param {boolean} restart\r\n\t     * @public\r\n\t     */\r\n\t  }, {\r\n\t    key: 'reset',\r\n\t    value: function reset() {\r\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\r\n\t\r\n\t      clearInterval(this.timeout);\r\n\t      this.replaceText('');\r\n\t      if (this.cursor && this.cursor.parentNode) {\r\n\t        this.cursor.parentNode.removeChild(this.cursor);\r\n\t        this.cursor = null;\r\n\t      }\r\n\t      this.strPos = 0;\r\n\t      this.arrayPos = 0;\r\n\t      this.curLoop = 0;\r\n\t      if (restart) {\r\n\t        this.insertCursor();\r\n\t        this.options.onReset(this);\r\n\t        this.begin();\r\n\t      }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Begins the typing animation\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'begin',\r\n\t    value: function begin() {\r\n\t      var _this = this;\r\n\t\r\n\t      this.options.onBegin(this);\r\n\t      this.typingComplete = false;\r\n\t      this.shuffleStringsIfNeeded(this);\r\n\t      this.insertCursor();\r\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\r\n\t      this.timeout = setTimeout(function () {\r\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\r\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\r\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\r\n\t        } else {\r\n\t          // Start typing\r\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\r\n\t        }\r\n\t      }, this.startDelay);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Called for each character typed\r\n\t     * @param {string} curString the current string in the strings array\r\n\t     * @param {number} curStrPos the current position in the curString\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'typewrite',\r\n\t    value: function typewrite(curString, curStrPos) {\r\n\t      var _this2 = this;\r\n\t\r\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\r\n\t        this.el.classList.remove(this.fadeOutClass);\r\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\r\n\t      }\r\n\t\r\n\t      var humanize = this.humanizer(this.typeSpeed);\r\n\t      var numChars = 1;\r\n\t\r\n\t      if (this.pause.status === true) {\r\n\t        this.setPauseStatus(curString, curStrPos, true);\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      // contain typing function in a timeout humanize'd delay\r\n\t      this.timeout = setTimeout(function () {\r\n\t        // skip over any HTML chars\r\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\r\n\t\r\n\t        var pauseTime = 0;\r\n\t        var substr = curString.substr(curStrPos);\r\n\t        // check for an escape character before a pause value\r\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\r\n\t        // single ^ are removed from string\r\n\t        if (substr.charAt(0) === '^') {\r\n\t          if (/^\\^\\d+/.test(substr)) {\r\n\t            var skip = 1; // skip at least 1\r\n\t            substr = /\\d+/.exec(substr)[0];\r\n\t            skip += substr.length;\r\n\t            pauseTime = parseInt(substr);\r\n\t            _this2.temporaryPause = true;\r\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\r\n\t            // strip out the escape character and pause value so they're not printed\r\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\r\n\t            _this2.toggleBlinking(true);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // check for skip characters formatted as\r\n\t        // \"this is a `string to print NOW` ...\"\r\n\t        if (substr.charAt(0) === '`') {\r\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\r\n\t            numChars++;\r\n\t            if (curStrPos + numChars > curString.length) break;\r\n\t          }\r\n\t          // strip out the escape characters and append all the string in between\r\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\r\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\r\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\r\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\r\n\t          numChars--;\r\n\t        }\r\n\t\r\n\t        // timeout for any pause after a character\r\n\t        _this2.timeout = setTimeout(function () {\r\n\t          // Accounts for blinking while paused\r\n\t          _this2.toggleBlinking(false);\r\n\t\r\n\t          // We're done with this sentence!\r\n\t          if (curStrPos >= curString.length) {\r\n\t            _this2.doneTyping(curString, curStrPos);\r\n\t          } else {\r\n\t            _this2.keepTyping(curString, curStrPos, numChars);\r\n\t          }\r\n\t          // end of character pause\r\n\t          if (_this2.temporaryPause) {\r\n\t            _this2.temporaryPause = false;\r\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\r\n\t          }\r\n\t        }, pauseTime);\r\n\t\r\n\t        // humanized value for typing\r\n\t      }, humanize);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Continue to the next string & begin typing\r\n\t     * @param {string} curString the current string in the strings array\r\n\t     * @param {number} curStrPos the current position in the curString\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'keepTyping',\r\n\t    value: function keepTyping(curString, curStrPos, numChars) {\r\n\t      // call before functions if applicable\r\n\t      if (curStrPos === 0) {\r\n\t        this.toggleBlinking(false);\r\n\t        this.options.preStringTyped(this.arrayPos, this);\r\n\t      }\r\n\t      // start typing each new char into existing string\r\n\t      // curString: arg, this.el.html: original text inside element\r\n\t      curStrPos += numChars;\r\n\t      var nextString = curString.substr(0, curStrPos);\r\n\t      this.replaceText(nextString);\r\n\t      // loop the function\r\n\t      this.typewrite(curString, curStrPos);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * We're done typing the current string\r\n\t     * @param {string} curString the current string in the strings array\r\n\t     * @param {number} curStrPos the current position in the curString\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'doneTyping',\r\n\t    value: function doneTyping(curString, curStrPos) {\r\n\t      var _this3 = this;\r\n\t\r\n\t      // fires callback function\r\n\t      this.options.onStringTyped(this.arrayPos, this);\r\n\t      this.toggleBlinking(true);\r\n\t      // is this the final string\r\n\t      if (this.arrayPos === this.strings.length - 1) {\r\n\t        // callback that occurs on the last typed string\r\n\t        this.complete();\r\n\t        // quit if we wont loop back\r\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\r\n\t          return;\r\n\t        }\r\n\t      }\r\n\t      this.timeout = setTimeout(function () {\r\n\t        _this3.backspace(curString, curStrPos);\r\n\t      }, this.backDelay);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Backspaces 1 character at a time\r\n\t     * @param {string} curString the current string in the strings array\r\n\t     * @param {number} curStrPos the current position in the curString\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'backspace',\r\n\t    value: function backspace(curString, curStrPos) {\r\n\t      var _this4 = this;\r\n\t\r\n\t      if (this.pause.status === true) {\r\n\t        this.setPauseStatus(curString, curStrPos, false);\r\n\t        return;\r\n\t      }\r\n\t      if (this.fadeOut) return this.initFadeOut();\r\n\t\r\n\t      this.toggleBlinking(false);\r\n\t      var humanize = this.humanizer(this.backSpeed);\r\n\t\r\n\t      this.timeout = setTimeout(function () {\r\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\r\n\t        // replace text with base text + typed characters\r\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\r\n\t        _this4.replaceText(curStringAtPosition);\r\n\t\r\n\t        // if smartBack is enabled\r\n\t        if (_this4.smartBackspace) {\r\n\t          // the remaining part of the current string is equal of the same part of the new string\r\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\r\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\r\n\t            _this4.stopNum = curStrPos;\r\n\t          } else {\r\n\t            _this4.stopNum = 0;\r\n\t          }\r\n\t        }\r\n\t\r\n\t        // if the number (id of character in current string) is\r\n\t        // less than the stop number, keep going\r\n\t        if (curStrPos > _this4.stopNum) {\r\n\t          // subtract characters one by one\r\n\t          curStrPos--;\r\n\t          // loop the function\r\n\t          _this4.backspace(curString, curStrPos);\r\n\t        } else if (curStrPos <= _this4.stopNum) {\r\n\t          // if the stop number has been reached, increase\r\n\t          // array position to next string\r\n\t          _this4.arrayPos++;\r\n\t          // When looping, begin at the beginning after backspace complete\r\n\t          if (_this4.arrayPos === _this4.strings.length) {\r\n\t            _this4.arrayPos = 0;\r\n\t            _this4.options.onLastStringBackspaced();\r\n\t            _this4.shuffleStringsIfNeeded();\r\n\t            _this4.begin();\r\n\t          } else {\r\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\r\n\t          }\r\n\t        }\r\n\t        // humanized value for typing\r\n\t      }, humanize);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Full animation is complete\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'complete',\r\n\t    value: function complete() {\r\n\t      this.options.onComplete(this);\r\n\t      if (this.loop) {\r\n\t        this.curLoop++;\r\n\t      } else {\r\n\t        this.typingComplete = true;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Has the typing been stopped\r\n\t     * @param {string} curString the current string in the strings array\r\n\t     * @param {number} curStrPos the current position in the curString\r\n\t     * @param {boolean} isTyping\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'setPauseStatus',\r\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\r\n\t      this.pause.typewrite = isTyping;\r\n\t      this.pause.curString = curString;\r\n\t      this.pause.curStrPos = curStrPos;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Toggle the blinking cursor\r\n\t     * @param {boolean} isBlinking\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'toggleBlinking',\r\n\t    value: function toggleBlinking(isBlinking) {\r\n\t      if (!this.cursor) return;\r\n\t      // if in paused state, don't toggle blinking a 2nd time\r\n\t      if (this.pause.status) return;\r\n\t      if (this.cursorBlinking === isBlinking) return;\r\n\t      this.cursorBlinking = isBlinking;\r\n\t      if (isBlinking) {\r\n\t        this.cursor.classList.add('typed-cursor--blink');\r\n\t      } else {\r\n\t        this.cursor.classList.remove('typed-cursor--blink');\r\n\t      }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Speed in MS to type\r\n\t     * @param {number} speed\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'humanizer',\r\n\t    value: function humanizer(speed) {\r\n\t      return Math.round(Math.random() * speed / 2) + speed;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Shuffle the sequence of the strings array\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'shuffleStringsIfNeeded',\r\n\t    value: function shuffleStringsIfNeeded() {\r\n\t      if (!this.shuffle) return;\r\n\t      this.sequence = this.sequence.sort(function () {\r\n\t        return Math.random() - 0.5;\r\n\t      });\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Adds a CSS class to fade out current string\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'initFadeOut',\r\n\t    value: function initFadeOut() {\r\n\t      var _this5 = this;\r\n\t\r\n\t      this.el.className += ' ' + this.fadeOutClass;\r\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\r\n\t      return setTimeout(function () {\r\n\t        _this5.arrayPos++;\r\n\t        _this5.replaceText('');\r\n\t\r\n\t        // Resets current string if end of loop reached\r\n\t        if (_this5.strings.length > _this5.arrayPos) {\r\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\r\n\t        } else {\r\n\t          _this5.typewrite(_this5.strings[0], 0);\r\n\t          _this5.arrayPos = 0;\r\n\t        }\r\n\t      }, this.fadeOutDelay);\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Replaces current text in the HTML element\r\n\t     * depending on element type\r\n\t     * @param {string} str\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'replaceText',\r\n\t    value: function replaceText(str) {\r\n\t      if (this.attr) {\r\n\t        this.el.setAttribute(this.attr, str);\r\n\t      } else {\r\n\t        if (this.isInput) {\r\n\t          this.el.value = str;\r\n\t        } else if (this.contentType === 'html') {\r\n\t          this.el.innerHTML = str;\r\n\t        } else {\r\n\t          this.el.textContent = str;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * If using input elements, bind focus in order to\r\n\t     * start and stop the animation\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'bindFocusEvents',\r\n\t    value: function bindFocusEvents() {\r\n\t      var _this6 = this;\r\n\t\r\n\t      if (!this.isInput) return;\r\n\t      this.el.addEventListener('focus', function (e) {\r\n\t        _this6.stop();\r\n\t      });\r\n\t      this.el.addEventListener('blur', function (e) {\r\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\r\n\t          return;\r\n\t        }\r\n\t        _this6.start();\r\n\t      });\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * On init, insert the cursor element\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'insertCursor',\r\n\t    value: function insertCursor() {\r\n\t      if (!this.showCursor) return;\r\n\t      if (this.cursor) return;\r\n\t      this.cursor = document.createElement('span');\r\n\t      this.cursor.className = 'typed-cursor';\r\n\t      this.cursor.setAttribute('aria-hidden', true);\r\n\t      this.cursor.innerHTML = this.cursorChar;\r\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\r\n\t    }\r\n\t  }]);\r\n\t\r\n\t  return Typed;\r\n\t})();\r\n\t\r\n\texports['default'] = Typed;\r\n\tmodule.exports = exports['default'];\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, '__esModule', {\r\n\t  value: true\r\n\t});\r\n\t\r\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\t\r\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\t\r\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\r\n\t\r\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\t\r\n\tvar _defaultsJs = __webpack_require__(2);\r\n\t\r\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\r\n\t\r\n\t/**\r\n\t * Initialize the Typed object\r\n\t */\r\n\t\r\n\tvar Initializer = (function () {\r\n\t  function Initializer() {\r\n\t    _classCallCheck(this, Initializer);\r\n\t  }\r\n\t\r\n\t  _createClass(Initializer, [{\r\n\t    key: 'load',\r\n\t\r\n\t    /**\r\n\t     * Load up defaults & options on the Typed instance\r\n\t     * @param {Typed} self instance of Typed\r\n\t     * @param {object} options options object\r\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\r\n\t     * @private\r\n\t     */\r\n\t\r\n\t    value: function load(self, options, elementId) {\r\n\t      // chosen element to manipulate text\r\n\t      if (typeof elementId === 'string') {\r\n\t        self.el = document.querySelector(elementId);\r\n\t      } else {\r\n\t        self.el = elementId;\r\n\t      }\r\n\t\r\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\r\n\t\r\n\t      // attribute to type into\r\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\r\n\t      self.attr = self.options.attr;\r\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\r\n\t\r\n\t      // show cursor\r\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\r\n\t\r\n\t      // custom cursor\r\n\t      self.cursorChar = self.options.cursorChar;\r\n\t\r\n\t      // Is the cursor blinking\r\n\t      self.cursorBlinking = true;\r\n\t\r\n\t      // text content of element\r\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\r\n\t\r\n\t      // html or plain text\r\n\t      self.contentType = self.options.contentType;\r\n\t\r\n\t      // typing speed\r\n\t      self.typeSpeed = self.options.typeSpeed;\r\n\t\r\n\t      // add a delay before typing starts\r\n\t      self.startDelay = self.options.startDelay;\r\n\t\r\n\t      // backspacing speed\r\n\t      self.backSpeed = self.options.backSpeed;\r\n\t\r\n\t      // only backspace what doesn't match the previous string\r\n\t      self.smartBackspace = self.options.smartBackspace;\r\n\t\r\n\t      // amount of time to wait before backspacing\r\n\t      self.backDelay = self.options.backDelay;\r\n\t\r\n\t      // Fade out instead of backspace\r\n\t      self.fadeOut = self.options.fadeOut;\r\n\t      self.fadeOutClass = self.options.fadeOutClass;\r\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\r\n\t\r\n\t      // variable to check whether typing is currently paused\r\n\t      self.isPaused = false;\r\n\t\r\n\t      // input strings of text\r\n\t      self.strings = self.options.strings.map(function (s) {\r\n\t        return s.trim();\r\n\t      });\r\n\t\r\n\t      // div containing strings\r\n\t      if (typeof self.options.stringsElement === 'string') {\r\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\r\n\t      } else {\r\n\t        self.stringsElement = self.options.stringsElement;\r\n\t      }\r\n\t\r\n\t      if (self.stringsElement) {\r\n\t        self.strings = [];\r\n\t        self.stringsElement.style.display = 'none';\r\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\r\n\t        var stringsLength = strings.length;\r\n\t\r\n\t        if (stringsLength) {\r\n\t          for (var i = 0; i < stringsLength; i += 1) {\r\n\t            var stringEl = strings[i];\r\n\t            self.strings.push(stringEl.innerHTML.trim());\r\n\t          }\r\n\t        }\r\n\t      }\r\n\t\r\n\t      // character number position of current string\r\n\t      self.strPos = 0;\r\n\t\r\n\t      // current array position\r\n\t      self.arrayPos = 0;\r\n\t\r\n\t      // index of string to stop backspacing on\r\n\t      self.stopNum = 0;\r\n\t\r\n\t      // Looping logic\r\n\t      self.loop = self.options.loop;\r\n\t      self.loopCount = self.options.loopCount;\r\n\t      self.curLoop = 0;\r\n\t\r\n\t      // shuffle the strings\r\n\t      self.shuffle = self.options.shuffle;\r\n\t      // the order of strings\r\n\t      self.sequence = [];\r\n\t\r\n\t      self.pause = {\r\n\t        status: false,\r\n\t        typewrite: true,\r\n\t        curString: '',\r\n\t        curStrPos: 0\r\n\t      };\r\n\t\r\n\t      // When the typing is complete (when not looped)\r\n\t      self.typingComplete = false;\r\n\t\r\n\t      // Set the order in which the strings are typed\r\n\t      for (var i in self.strings) {\r\n\t        self.sequence[i] = i;\r\n\t      }\r\n\t\r\n\t      // If there is some text in the element\r\n\t      self.currentElContent = this.getCurrentElContent(self);\r\n\t\r\n\t      self.autoInsertCss = self.options.autoInsertCss;\r\n\t\r\n\t      this.appendAnimationCss(self);\r\n\t    }\r\n\t  }, {\r\n\t    key: 'getCurrentElContent',\r\n\t    value: function getCurrentElContent(self) {\r\n\t      var elContent = '';\r\n\t      if (self.attr) {\r\n\t        elContent = self.el.getAttribute(self.attr);\r\n\t      } else if (self.isInput) {\r\n\t        elContent = self.el.value;\r\n\t      } else if (self.contentType === 'html') {\r\n\t        elContent = self.el.innerHTML;\r\n\t      } else {\r\n\t        elContent = self.el.textContent;\r\n\t      }\r\n\t      return elContent;\r\n\t    }\r\n\t  }, {\r\n\t    key: 'appendAnimationCss',\r\n\t    value: function appendAnimationCss(self) {\r\n\t      var cssDataName = 'data-typed-js-css';\r\n\t      if (!self.autoInsertCss) {\r\n\t        return;\r\n\t      }\r\n\t      if (!self.showCursor && !self.fadeOut) {\r\n\t        return;\r\n\t      }\r\n\t      if (document.querySelector('[' + cssDataName + ']')) {\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      var css = document.createElement('style');\r\n\t      css.type = 'text/css';\r\n\t      css.setAttribute(cssDataName, true);\r\n\t\r\n\t      var innerCss = '';\r\n\t      if (self.showCursor) {\r\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\r\n\t      }\r\n\t      if (self.fadeOut) {\r\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\r\n\t      }\r\n\t      if (css.length === 0) {\r\n\t        return;\r\n\t      }\r\n\t      css.innerHTML = innerCss;\r\n\t      document.body.appendChild(css);\r\n\t    }\r\n\t  }]);\r\n\t\r\n\t  return Initializer;\r\n\t})();\r\n\t\r\n\texports['default'] = Initializer;\r\n\tvar initializer = new Initializer();\r\n\texports.initializer = initializer;\r\n\r\n/***/ }),\r\n/* 2 */\r\n/***/ (function(module, exports) {\r\n\r\n\t/**\r\n\t * Defaults & options\r\n\t * @returns {object} Typed defaults & options\r\n\t * @public\r\n\t */\r\n\t\r\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, '__esModule', {\r\n\t  value: true\r\n\t});\r\n\tvar defaults = {\r\n\t  /**\r\n\t   * @property {array} strings strings to be typed\r\n\t   * @property {string} stringsElement ID of element containing string children\r\n\t   */\r\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\r\n\t  stringsElement: null,\r\n\t\r\n\t  /**\r\n\t   * @property {number} typeSpeed type speed in milliseconds\r\n\t   */\r\n\t  typeSpeed: 0,\r\n\t\r\n\t  /**\r\n\t   * @property {number} startDelay time before typing starts in milliseconds\r\n\t   */\r\n\t  startDelay: 0,\r\n\t\r\n\t  /**\r\n\t   * @property {number} backSpeed backspacing speed in milliseconds\r\n\t   */\r\n\t  backSpeed: 0,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\r\n\t   */\r\n\t  smartBackspace: true,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} shuffle shuffle the strings\r\n\t   */\r\n\t  shuffle: false,\r\n\t\r\n\t  /**\r\n\t   * @property {number} backDelay time before backspacing in milliseconds\r\n\t   */\r\n\t  backDelay: 700,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} fadeOut Fade out instead of backspace\r\n\t   * @property {string} fadeOutClass css class for fade animation\r\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\r\n\t   */\r\n\t  fadeOut: false,\r\n\t  fadeOutClass: 'typed-fade-out',\r\n\t  fadeOutDelay: 500,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} loop loop strings\r\n\t   * @property {number} loopCount amount of loops\r\n\t   */\r\n\t  loop: false,\r\n\t  loopCount: Infinity,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} showCursor show cursor\r\n\t   * @property {string} cursorChar character for cursor\r\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\r\n\t   */\r\n\t  showCursor: true,\r\n\t  cursorChar: '|',\r\n\t  autoInsertCss: true,\r\n\t\r\n\t  /**\r\n\t   * @property {string} attr attribute for typing\r\n\t   * Ex: input placeholder, value, or just HTML text\r\n\t   */\r\n\t  attr: null,\r\n\t\r\n\t  /**\r\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\r\n\t   */\r\n\t  bindInputFocusEvents: false,\r\n\t\r\n\t  /**\r\n\t   * @property {string} contentType 'html' or 'null' for plaintext\r\n\t   */\r\n\t  contentType: 'html',\r\n\t\r\n\t  /**\r\n\t   * Before it begins typing\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onBegin: function onBegin(self) {},\r\n\t\r\n\t  /**\r\n\t   * All typing is complete\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onComplete: function onComplete(self) {},\r\n\t\r\n\t  /**\r\n\t   * Before each string is typed\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * After each string is typed\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * During looping, after last string is typed\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\r\n\t\r\n\t  /**\r\n\t   * Typing has been stopped\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * Typing has been started after being stopped\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * After reset\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onReset: function onReset(self) {},\r\n\t\r\n\t  /**\r\n\t   * After stop\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onStop: function onStop(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * After start\r\n\t   * @param {number} arrayPos\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onStart: function onStart(arrayPos, self) {},\r\n\t\r\n\t  /**\r\n\t   * After destroy\r\n\t   * @param {Typed} self\r\n\t   */\r\n\t  onDestroy: function onDestroy(self) {}\r\n\t};\r\n\t\r\n\texports['default'] = defaults;\r\n\tmodule.exports = exports['default'];\r\n\r\n/***/ }),\r\n/* 3 */\r\n/***/ (function(module, exports) {\r\n\r\n\t/**\r\n\t * TODO: These methods can probably be combined somehow\r\n\t * Parse HTML tags & HTML Characters\r\n\t */\r\n\t\r\n\t'use strict';\r\n\t\r\n\tObject.defineProperty(exports, '__esModule', {\r\n\t  value: true\r\n\t});\r\n\t\r\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\r\n\t\r\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\r\n\t\r\n\tvar HTMLParser = (function () {\r\n\t  function HTMLParser() {\r\n\t    _classCallCheck(this, HTMLParser);\r\n\t  }\r\n\t\r\n\t  _createClass(HTMLParser, [{\r\n\t    key: 'typeHtmlChars',\r\n\t\r\n\t    /**\r\n\t     * Type HTML tags & HTML Characters\r\n\t     * @param {string} curString Current string\r\n\t     * @param {number} curStrPos Position in current string\r\n\t     * @param {Typed} self instance of Typed\r\n\t     * @returns {number} a new string position\r\n\t     * @private\r\n\t     */\r\n\t\r\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\r\n\t      if (self.contentType !== 'html') return curStrPos;\r\n\t      var curChar = curString.substr(curStrPos).charAt(0);\r\n\t      if (curChar === '<' || curChar === '&') {\r\n\t        var endTag = '';\r\n\t        if (curChar === '<') {\r\n\t          endTag = '>';\r\n\t        } else {\r\n\t          endTag = ';';\r\n\t        }\r\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\r\n\t          curStrPos++;\r\n\t          if (curStrPos + 1 > curString.length) {\r\n\t            break;\r\n\t          }\r\n\t        }\r\n\t        curStrPos++;\r\n\t      }\r\n\t      return curStrPos;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * Backspace HTML tags and HTML Characters\r\n\t     * @param {string} curString Current string\r\n\t     * @param {number} curStrPos Position in current string\r\n\t     * @param {Typed} self instance of Typed\r\n\t     * @returns {number} a new string position\r\n\t     * @private\r\n\t     */\r\n\t  }, {\r\n\t    key: 'backSpaceHtmlChars',\r\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\r\n\t      if (self.contentType !== 'html') return curStrPos;\r\n\t      var curChar = curString.substr(curStrPos).charAt(0);\r\n\t      if (curChar === '>' || curChar === ';') {\r\n\t        var endTag = '';\r\n\t        if (curChar === '>') {\r\n\t          endTag = '<';\r\n\t        } else {\r\n\t          endTag = '&';\r\n\t        }\r\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\r\n\t          curStrPos--;\r\n\t          if (curStrPos < 0) {\r\n\t            break;\r\n\t          }\r\n\t        }\r\n\t        curStrPos--;\r\n\t      }\r\n\t      return curStrPos;\r\n\t    }\r\n\t  }]);\r\n\t\r\n\t  return HTMLParser;\r\n\t})();\r\n\t\r\n\texports['default'] = HTMLParser;\r\n\tvar htmlParser = new HTMLParser();\r\n\texports.htmlParser = htmlParser;\r\n\r\n/***/ })\r\n/******/ ])\r\n});\r\n;"]},"metadata":{},"sourceType":"script"}